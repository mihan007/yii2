<?php

namespace common\models;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the model class for table "ak_coef".
 *
 * @property int $id
 * @property int $ak_campaign_mapping_id
 * @property int $start_time
 * @property int $end_time
 * @property int $google_value
 * @property int $yandex_value
 * @property int $vk_value
 * @property int $fb_value
 * @property int $created_at
 * @property int $updated_at
 * @property int $source
 * @property int $user_id
 * @property int $is_active
 *
 * @property AkCampaignMapping $akCampaignMapping
 */
class AkCoef extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'ak_coef';
    }

    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return [
            TimestampBehavior::className()
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['ak_campaign_mapping_id', 'google_value', 'yandex_value', 'vk_value', 'fb_value', 'is_active'], 'integer'],
            [['ak_campaign_mapping_id'], 'exist', 'skipOnError' => true, 'targetClass' => AkCampaignMapping::className(), 'targetAttribute' => ['ak_campaign_mapping_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'ak_campaign_mapping_id' => 'Ak Campaign Mapping ID',
            'date' => 'Дата',
            'start_time' => 'Дата',
            'end_time' => 'End Time',
            'google_value' => 'Google Value',
            'googleValue' => 'Ак,фикс + Ак,бонус Google',
            'yandex_value' => 'Yandex Value',
            'yandexValue' => 'Ак,фикс + Ак,бонус Яндекс',
            'vk_value' => 'VK Value',
            'vkValue' => 'Ак,фикс + Ак,бонус Vk',
            'fb_value' => 'FB Value',
            'fbValue' => 'Ак,фикс + Ак,бонус Fb',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'ourCampaignName' => 'Кампания у нас',
            'googleCampaignName' => 'Кампания Google',
            'yandexCampaignName' => 'Кампания Яндекс',
            'vkCampaignName' => 'Кампания VK',
            'fbCampaignName' => 'Кампания Facebook',
            'is_active' => 'Активная'
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAkCampaignMapping()
    {
        return $this->hasOne(AkCampaignMapping::className(), ['id' => 'ak_campaign_mapping_id']);
    }

    public function getDate()
    {
        return \Yii::$app->formatter->format($this->start_time, 'date');
    }

    public function getOurCampaignName()
    {
        return $this->akCampaignMapping->our_campaign_name;
    }

    public function getYandexCampaignName()
    {
        return $this->akCampaignMapping->yandex_campaign_name;
    }

    public function getGoogleCampaignName()
    {
        return $this->akCampaignMapping->yandex_campaign_name;
    }

    public function getGoogleValue()
    {
        return number_format($this->google_value / 100, 2) . "%";
    }

    public function getGoogleCommon()
    {
        return 1 + $this->google_value / 10000;
    }

    public function getYandexValue()
    {
        return number_format($this->yandex_value / 100, 2) . "%";
    }

    public function getYandexCommon()
    {
        return 1 + $this->yandex_value / 10000;
    }

    public function getVkValue()
    {
        return number_format($this->vk_value / 100, 2) . "%";
    }

    public function getVkCommon()
    {
        return 1 + $this->vk_value / 10000;
    }

    public function getFbValue()
    {
        return number_format($this->fb_value / 100, 2) . "%";
    }

    public function getFbCommon()
    {
        return 1 + $this->fb_value / 10000;
    }

    public function afterSave($insert, $changedAttributes)
    {
        if ($insert) {
            AkCoef::updateAll(['is_active' => 0], ['ak_campaign_mapping_id' => $this->ak_campaign_mapping_id, 'start_time' => $this->start_time]);
            $this->updateAttributes(['is_active' => 1]);
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }
}
